apiVersion: v1
kind: Service
metadata:
  name: spring-rest-api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"  # Network Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"  # Para usar o NLB com IPs
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"  # Para expor na internet
  labels:
    name: spring-rest-api
spec:
  type: LoadBalancer
  ports:
    - name: web
      port: 8080        # Porta que será exposta
      targetPort: 8080  # Porta no container que receberá o tráfego
  selector:
    app: spring-rest-api  # Label selector para encontrar os pods corretos

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-rest-api
spec:
  selector:
    matchLabels:
      app: spring-rest-api
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-rest-api
    spec:
      containers:
        - name: spring-rest-api
          image: 793862496606.dkr.ecr.us-east-1.amazonaws.com/tech-challenge-fiap:latest
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf  # name of configMap
                  key: host
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: name
            - name: POSTGRES_USER  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials # Secret Name
                  key: postgres_user
            - name: POSTGRES_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password